
user  root;
worker_processes  1;
daemon off;
#跟cpu核数一致
error_log  /nginx-test/log/error.log;
#pid        logs/nginx.pid;
events {
    worker_connections  1024;
}

http {

        include       /usr/local/nginx/conf/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        sendfile        on;
        #tcp_nopush     on;
        #keepalive_timeout  0;
        keepalive_timeout  65;
        #lua_package_path "/lua-packge/lua-resty-http-0.12/lib/?.lua;;/lua-packge/lua-resty-template-1.9/lib/?.lua;;";
        lua_package_path "/lua-packge/lua-resty-lock-0.07/lib/?.lua;;/lua-packge/lua-resty-redis-0.26/lib/?.lua;;/lua-packge/resty-redis-cluster-master/lib/?.lua;;/lua-packge/lua-resty-http-0.12/lib/?.lua;;/lua-packge/lua-resty-template-1.9/lib/?.lua;;";
        lua_package_cpath "/lua-packge/resty-redis-cluster-master/lib/?.so;;";
        lua_shared_dict redis_cluster_slot_locks 100k; #共享内存
        server {
            listen       80;
            server_name  nginx.rbtedu.com;
            set   $cachePATH   "/cache/";

            location / {
                default_type text/html;
                root /nginx-test/lua-project/html;
                #content_by_lua '
                #     ngx.header.content_type="text/html";
                #     ngx.say(ngx.var.cachePATH);
                #';

                lua_code_cache off;
                content_by_lua_file "/nginx-test/lua-project/template.lua";

                #limit_req zone=two;
                 #default_type text/html;
                 #return 200  "$limit";
                #index  nginx.23673.html index.htm;

            }

            #~* \.(gif|jpeg|jpg|mp3)$

            #location ^~ /img/ {
            #     alias /www/img/;
                 #alias /www/img/1.jpg 正则匹配出完整路径
            #     expires 10s;
            #     access_log off;

            #}


            #error_page  404              /404.html;

            # redirect server error pages to the static page /50x.html
            #
            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                  root   html;
            }
        }

}
